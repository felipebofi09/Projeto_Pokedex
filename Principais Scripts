Olá pessoal, aqui serão disponibilizado os principais Scripts para você buscar informações no Projeto Pokedex.

1: Selecionar todos os registros da tabela Pokemon: SELECT * FROM Pokemon;

2: Buscar Pokémons por nome (exato): SELECT * FROM Pokemon WHERE nome = 'nome_do_pokemon';

3: Buscar todas as informações de Pokémons do tipo Agua, com Subtipo Planta: 

SELECT * FROM Pokemon
WHERE Tipo = 'Agua' AND Subtipo = 'Planta';

4: Buscar Pokémon por número na Pokedex: SELECT * FROM Pokemon WHERE `Numero da Pokedex` = 1;
# OBS: O "1" pode ser substituído pelo número específico da Pokedex do Pokémon que você deseja buscar :) #

5: Buscar Pokémons por tipo: SELECT * FROM Pokemon WHERE tipo = 'Agua';

6: Buscar Pokémons com base em várias condições usando AND e OR: SELECT * FROM Pokemon WHERE tipo = 'Fogo' AND Geração >= 1;

7: Ordenar a Pokedex por ordem alfabética de nomes dos Pokémon: SELECT * FROM Pokemon ORDER BY nome ASC;

8: Buscar Pokemons da 2º geração, mostrando o Nome, Tipo e Peso, por ordem crescente: 

SELECT nome, tipo, `Peso Médio` FROM Pokemon
WHERE tipo = 'Fogo' AND Geração = '2' AND `Peso Médio` > 10
ORDER BY nome ASC;

9: Buscar Pokemons do tipo pedra, que pesam mais de 20kg, mostrando apenas o nome e a geração dos mesmos:

SELECT nome, `Geração` FROM Pokemon
WHERE tipo = 'Pedra' AND `Peso Médio` > 20;

10: Buscar os 5 Pokemons mais pesados da 1º a 3º geração: 

SELECT nome, `Peso Médio` FROM Pokemon
ORDER BY `Peso Médio` DESC
LIMIT 5;

11: Buscar os 5 Pokemons mais leves da 1º a 3º geração:

SELECT nome, `Peso Médio` FROM Pokemon
ORDER BY `Peso Médio` ASC
LIMIT 5;

12: Contar quantos Pokemons existem de cada tipo, da 1º a 3º geração:

SELECT tipo, COUNT(*) AS quantidade
FROM Pokemon
GROUP BY tipo;

13: Contar quantos Pokemons existem de cada tipo, da 1º a 3º geração, organizados de maneira crescente:

SELECT tipo, COUNT(*) AS quantidade
FROM Pokemon
WHERE Geração BETWEEN 1 AND 3   -- Para filtrar apenas a 1ª, 2ª e 3ª geração
GROUP BY tipo
ORDER BY COUNT(*) ASC;

14: Contar quantos Pokemons existem de cada tipo, da 1º a 3º Geração, mostrando, além da quantidade, a geração a qual se referem.

SELECT tipo, Geração, COUNT(*) AS quantidade
FROM Pokemon
GROUP BY tipo, Geração
ORDER BY tipo;










